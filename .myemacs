;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; append-tuareg.el - Tuareg quick installation: Append this file to .emacs.

;; Switch between buffers
(global-set-key [M-left] 'windmove-left)          ; move to left windnow
(global-set-key [M-right] 'windmove-right)        ; move to right window
(global-set-key [M-up] 'windmove-up)              ; move to upper window
(global-set-key [M-down] 'windmove-down)          ; move to downer windows

;; Indent whole buffer
(defun iwb ()
  "indent whole buffer"
  (interactive)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max)))

;; Auto pair
(add-to-list 'load-path "~/.emacs.d/")
(require 'autopair)
(add-hook 'c-mode-common-hook #'(lambda () (autopair-mode)))

(add-hook 'c++-mode-hook
	  #'(lambda ()
	      (push ?{
		    (getf autopair-dont-pair :comment))))

(add-hook 'c++-mode-hook
	  #'(lambda ()
	      (push '(?< . ?>)
		    (getf autopair-extra-pairs :code))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(add-to-list 'auto-mode-alist '("\\.ml[iylp]?" . tuareg-mode))
(autoload 'tuareg-mode "tuareg" "Major mode for editing Caml code" t)
(autoload 'camldebug "camldebug" "Run the Caml debugger" t)
(dolist (ext '(".cmo" ".cmx" ".cma" ".cmxa" ".cmi"))
  (add-to-list 'completion-ignored-extensions ext))

;; Auto-complete mod
(add-to-list 'load-path "~/.emacs.d/auto-complete")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/auto-complete/ac-dict")
(ac-config-default)

;; Lancer le man avec F3
(defun vectra-man-on-word ()
  "Appelle le man sur le mot pointe par le curseur"
  (interactive)
  (manual-entry (current-word)))
(global-set-key [f3] 'vectra-man-on-word)

;; Suppression des espaces en fin de ligne a l'enregistrement
(add-hook 'c++-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))
(add-hook   'c-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))

;; Laisser le curseur en place lors d'un defilement par pages.
;; Par defaut, Emacs place le curseur en debut ou fin d'ecran
;; selon le sens du defilement.
(setq scroll-preserve-screen-position t)

;; Complette automatiquement ce que vous tapez dans le mini-buffer
(icomplete-mode 1)

;; parenthese em couleur
(custom-set-variables
 '(show-paren-mode t))
(custom-set-faces)

;; yes > y | no > n
(fset 'yes-or-no-p 'y-or-n-p)

;; Affiche le numero de ligne et de colonne
(column-number-mode t)
(line-number-mode t)

;; Enlever le message au demarrage
(setq inhibit-startup-message t)

;; ido mode
(require 'ido)
(ido-mode t)
(setq ido-enable-flex-matching t)

;; Reduit la fontion sur elle meme avec F1
(add-hook 'c-mode-common-hook 'hs-minor-mode)
(add-hook 'lisp-mode-hook 'hs-minor-mode)
(add-hook 'emacs-lisp-mode-hook 'hs-minor-mode)
(add-hook 'python-mode-hook 'hs-minor-mode)
(global-set-key [f1] 'hs-hide-block)

;; Et la 'de'reduit avec F2
(global-set-key [f2] 'hs-show-block)

(setq-default show-trailing-whitespace t) ; affiche les espaces en fin de ligne
(setq-default delete-trailing-whitespace t) ; affiche les espaces en fin de ligne

(setq inhibit-startup-message t) ; desactive message au demarrage

(auto-save-mode nil) ; desactive l'auto save
(global-set-key [f9] 'compile) ; raccourcie pour compile dans emacs
(column-number-mode t)
(line-number-mode t)(global-font-lock-mode)

(global-font-lock-mode t)
(setq font-lock-maximum-decoration t)

(autoload 'glsl-mode "glsl-mode" nil t)
(add-to-list 'auto-mode-alist '("\\.vert\\'" . glsl-mode))
(add-to-list 'auto-mode-alist '("\\.frag\\'" . glsl-mode))
(add-to-list 'auto-mode-alist '("\\.vp\\'" . glsl-mode))
(add-to-list 'auto-mode-alist '("\\.fp\\'" . glsl-mode))
(add-to-list 'auto-mode-alist '("\\.fbx\\'" . glsl-mode))